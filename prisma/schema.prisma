generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Appointment {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  value        Decimal        @db.Decimal(47, 2)
  date         DateTime       @db.Timestamptz(6)
  userId       Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  User         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  Notification Notification[]
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  color       String        @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Transaction Transaction[]
}

model Notification {
  id            Int         @id @default(autoincrement())
  appointmentId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Appointment   Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Transaction {
  id         Int             @id @default(autoincrement())
  value      Decimal         @db.Decimal(47, 2)
  type       TransactionType
  date       DateTime        @db.Timestamptz(6)
  userId     Int
  categoryId Int
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  Category   Category        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  User       User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  image       String
  email       String        @unique @db.VarChar(255)
  password    String        @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Appointment Appointment[]
  Session     Session[]
  Transaction Transaction[]
}

enum TransactionType {
  INPUT
  OUTPUT
}
